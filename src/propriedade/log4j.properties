#### Use Tr\u00eas appenders,
#stdout - \u00e9 usado para grava\u00e7\u00e3o de consolar
#R - \u00c9 utilizado para a grava\u00e7\u00e3o para arquivar
log4j.rootLogger = debug, stdout, R
# Imprima apenas mensagens de prioridade WARN ou superior para a sua categoria
# Log4j.category.your.category.name = WARN
# Especificamente herdar o n\u00edvel de prioridade
# log4j.category.your.category.name = HERDADA
\u00a0
# Imprimir apenas as mensagens de n\u00edvel WARN ou acima no pacote
#Esta \u00c9 uso para o modo debuging
log4j.logger.testlogging=DEBUG
 
&nbsp;
 
#### Appender writes to console
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
# Pattern to output the caller's file name and line number.
log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd} %5p [%t] (%F:%L) - %m%n
 
&nbsp;
 
#### Appender grava em um arquivo
# log4j.appender.R = org.apache.log4j.FileAppender
log4j.appender.R=org.apache.log4j.RollingFileAppender
log4j.appender.R.File=LOGS_SISTEMA.log
# Controlar o tamanho m\u00e1ximo de arquivo de log
log4j.appender.R.MaxFileSize=100KB
# Arquivos de log Archive (um arquivo de backup aqui)
log4j.appender.R.MaxBackupIndex=1
log4j.appender.R.layout=org.apache.log4j.PatternLayout

#%p tipo de erro
#cada letra ecxiste um significado esta tudo no site -> www.mkyong.com/logging/log4j-hello-world-example/ 
# exemplode log de saida log4j.appender.file.layout.ConversionPattern = % d { AAAA-MM-DD HH: mm: ss }  % -5p % c { 1 } : % L - % m % n
log4j.appender.R.layout.ConversionPattern= %n---------- %p  %d{dd-MM-yyyy  HH:mm:ss} ----------------%n%n %5p [%t] (%F:%L) - %m%n
#log4j.appender.R.layout.ConversionPattern=%n%p - %m